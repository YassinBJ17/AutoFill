/* --------------------------------------------------------------------------
 *                        SAFRAN Electronics & Defense
 *                   Reproduction and disclosure forbidden.
 * --------------------------------------------------------------------------
 * DESCRIPTION : Worker that initializes the OSS and execute it in realtime
 * -------------------------------------------------------------------------- */

/* ---------- include provided interface: ----------------------------------- */
#include "sched/clock_data.psyh"
#include "main/uod_interface_task_public.h"

/* ---------- include required interface: ----------------------------------- */
/* none */

/* ---------- internal define constants: ------------------------------------ */
/* none */

/* ---------- internal types: ----------------------------------------------- */
/* none */

/* ---------- provided constants: ------------------------------------------- */
/* none */

/* ---------- provided data: ------------------------------------------------ */
/* none */

/* ---------- internal constants: ------------------------------------------- */
/* none */

/* ---------- internal data: ------------------------------------------------ */
/* none */

/* ---------- provided operation bodies: ------------------------------------ */
/* none */

/* ---------- internal operations: ------------------------------------------ */
/* Implements REQ_FADEX_OS_SRD-SCHED-0010 */
/* Implements REQ_FADEX_OS_SRD-SCHED-0030 */
/* Worker for the UODG */
worker uod_wrapper_wk_task(uses SOURCE)
{
   /* Initialize the UODG */
   init
   {
      /* C function containing all the initialization */
      uod_init();
   }

   /* Execute the UODG in realtime for a duration of 4 ms each RTC (10 ms) */
   input
   {
      /* Job in charge of execution */
      job job_uod(onclock clock_10ms, starttime 2)
      {
         /* Body of the job referencing the budget given to UODG */
         khibody(timebudget budget_wk_uod_task)
         {
            /* Execute the UODG in realtime */
            uod_task();
         }
      }
   }
}
